{"ast":null,"code":"var _jsxFileName = \"/Users/henrylourtie/FullSatackOpen/part1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [all, setAll] = useState(0); // Components\n\n  const Title = ({\n    name\n  }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 31\n    }, this)\n  }, void 0, false);\n\n  const Button = ({\n    handleClick,\n    text\n  }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 45\n    }, this)\n  }, void 0, false);\n\n  const Statistics = ({\n    good,\n    neutral,\n    bad,\n    all\n  }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Statsline, {\n      text: \"Good\",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statsline, {\n      text: \"Neutral\",\n      value: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statsline, {\n      text: \"Bad\",\n      value: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statsline, {\n      text: \"All\",\n      value: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statsline, {\n      text: \"Average\",\n      value: all !== 0 ? (good - bad) / all : 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statsline, {\n      text: \"Positive\",\n      value: (all !== 0 ? good / all : 0) * 100 + \"%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n\n  const Statsline = ({\n    text,\n    value\n  }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [text, \" \", value]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 41\n    }, this)\n  }, void 0, false); //Click handlers\n\n\n  const handleGoodClick = () => {\n    setAll(all + 1);\n    setGood(good + 1);\n  };\n\n  const handleNeutralClick = () => {\n    setAll(all + 1);\n    setNeutral(neutral + 1);\n  };\n\n  const handleBadClick = () => {\n    setAll(all + 1);\n    setBad(bad + 1);\n  }; //app return\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      name: \"Give Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGoodClick,\n      text: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutralClick,\n      text: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBadClick,\n      text: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {\n      name: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      bad: bad,\n      neutral: neutral,\n      all: all\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"uTssgC4nlUSepBgkUpbW/ujAc84=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/henrylourtie/FullSatackOpen/part1/src/App.js"],"names":["React","useState","App","good","setGood","neutral","setNeutral","bad","setBad","all","setAll","Title","name","Button","handleClick","text","Statistics","Statsline","value","handleGoodClick","handleNeutralClick","handleBadClick"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [all, setAll] = useState(0)\n  // Components\n  const Title = ({name}) => <><h1>{name}</h1></> ;\n  const Button = ({handleClick, text}) => <><button onClick={handleClick} >{text}</button></> ;\n  const Statistics = ({good, neutral, bad, all})=>(\n    <>\n      <Statsline text=\"Good\" value={good} />\n      <Statsline text=\"Neutral\" value={neutral} />\n      <Statsline text=\"Bad\" value={bad} />\n      <Statsline text=\"All\" value={all} />\n      <Statsline text=\"Average\" value={all !== 0 ?(good - bad)/all : 0} />\n      <Statsline text=\"Positive\" value={(all !==0 ? good/all:0)*100+ \"%\"} />\n    </> \n  )\n  const Statsline = ({text,value}) => <><p>{text} {value}</p></>\n  //Click handlers\n  const handleGoodClick = () => {\n    setAll(all + 1);\n    setGood(good + 1);\n  }\n  const handleNeutralClick = () => {\n    setAll(all + 1);\n    setNeutral(neutral + 1);\n  }\n  const handleBadClick = () => {\n    setAll(all + 1);\n    setBad(bad + 1);\n  }\n  //app return\n  return (\n    <div>\n      <Title name=\"Give Feedback\" />\n      <Button handleClick={handleGoodClick} text=\"Good\"/>\n      <Button handleClick={handleNeutralClick} text=\"Neutral\" />\n      <Button handleClick={handleBadClick} text=\"Bad\" />\n      <Title name=\"Statistics\" />\n      <Statistics good={good} bad={bad} neutral={neutral} all={all} />\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}